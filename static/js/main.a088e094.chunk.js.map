{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["PlainText","className","this","props","content","React","Component","Title","leadText","likeList","useState","setContent","likeIdx","setLikeIdx","charIdx","setCharIdx","reverse","setReverse","useEffect","interval","setInterval","length","substring","clearInterval","Introudction","introduction","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAGMA,E,4JACJ,WACE,OACI,qBAAKC,UAAU,gBAAf,SACE,qBAAKA,UAAU,aAAf,SACGC,KAAKC,MAAMC,gB,GALAC,IAAMC,WAY9B,SAASC,IACP,IAAMC,EAAW,mCACXC,EAAW,CAAC,eAAgB,YAAa,MAAO,cAAe,iBAAkB,wBACvF,EAA8BC,mBAAS,IAAvC,mBAAON,EAAP,KAAgBO,EAAhB,KACA,EAA8BD,mBAAS,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAA8BH,mBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KACA,EAA8BL,oBAAS,GAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KA8BA,OA5BAC,qBAAU,WACR,IAAIC,EAAWC,aAAY,WACrBJ,EACEF,GAAWN,EAASa,QACtBJ,GAAW,GACXJ,GAAYD,EAAU,GAAKH,EAASY,QACpCN,EAAWD,EAAU,GACrBH,GAAYH,EAAWC,EAASG,IAAUU,UAAU,EAAGR,MAEvDC,EAAWD,EAAU,GACrBH,GAAYH,EAAWC,EAASG,IAAUU,UAAU,EAAGR,KAIrDA,IAAYN,EAAWC,EAASG,IAAUS,OAAS,GACrDJ,GAAW,IAEXF,EAAWD,EAAU,GACrBH,GAAYH,EAAWC,EAASG,IAAUU,UAAU,EAAGR,OAK1D,KACH,OAAO,WACLS,cAAcJ,OAId,qBAAIlB,UAAU,YAAd,cAA4BG,EAA5B,IAAqC,4BAI3C,SAASoB,IACP,IAAMC,EAAe,8BAAG,+RAId,yFAA2D,yCAA3D,WAEV,OACE,cAAC,EAAD,CAAWrB,QAASqB,IAiBTC,MAbf,WACE,OACE,qBAAKzB,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAACM,EAAD,IAEA,cAACiB,EAAD,UC9DOG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a088e094.chunk.js","sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from 'react';\n\nclass PlainText extends React.Component {\n  render() {\n    return (\n        <div className=\"App-container\">\n          <div className=\"App-center\">\n            {this.props.content}\n          </div>\n        </div>\n    );\n  }\n}\n\nfunction Title() {\n  const leadText = \"Hi! I'm Charlie Maclean. I like \"\n  const likeList = [\"programming.\", \"robotics.\", \"AI.\", \"web design.\", \"tech for good.\", \"Android development.\"]\n  const [content, setContent] = useState(\"\");\n  const [likeIdx, setLikeIdx] = useState(0);\n  const [charIdx, setCharIdx] = useState(0);\n  const [reverse, setReverse] = useState(false);\n\n  useEffect(() =>{\n    let interval = setInterval(() =>{\n      if (reverse) {\n        if (charIdx <= leadText.length) {\n          setReverse(false);\n          setLikeIdx((likeIdx + 1) % likeList.length);\n          setCharIdx(charIdx + 1);\n          setContent((leadText + likeList[likeIdx]).substring(0, charIdx));\n        } else {\n          setCharIdx(charIdx - 1);\n          setContent((leadText + likeList[likeIdx]).substring(0, charIdx));\n        }\n\n      } else {\n        if (charIdx >= (leadText + likeList[likeIdx]).length + 20) {\n          setReverse(true);\n        } else {\n          setCharIdx(charIdx + 1);\n          setContent((leadText + likeList[likeIdx]).substring(0, charIdx));\n        }\n      }\n\n\n    }, 100)\n    return ()=> {\n      clearInterval(interval);\n    };\n  });\n  return (\n      <h1 className=\"App-typed\"> {content} <span></span></h1>\n  )\n}\n\nfunction Introudction() {\n  const introduction = <p><p> Hi! I am a computer science master's graduate from the University of Cambridge. \n            I'm interested in robotics, AI, web design and tech for good. My master's\n            project looked how we can better define safety for autonomous driving with reinforcement\n            learning. </p> \n            <p>This website is a work in progress (helping me to learn <code>React</code>).</p></p>;\n\n  return (\n    <PlainText content={introduction}></PlainText>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Title></Title>\n\n        <Introudction></Introudction>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}